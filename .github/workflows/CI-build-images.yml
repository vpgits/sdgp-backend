name: Build and push images to AWS ECR
permissions:
  id-token: write
  contents: read
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      # Checkout the repository with git lfs set to true to checkout with the model gte/small
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
        # Configure AWS credentials, IAM Identity Center Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ vars.ROLE_TO_ASSUME_AWS }}
          aws-region: ${{ vars.AWS_REGION }}
        # Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        # Build, tag, and push docker image to Amazon ECR (web, worker, rabbitmq)
      - name: Build, tag, and push celery worker docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: sdgp-backend-worker
          IMAGE_TAG: ${{ github.sha }} 
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./celery_workers/Dockerfile  .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push fastapi docker image to Amazon ECR
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: sdgp-backend-web
            IMAGE_TAG: ${{ github.sha }} 
        run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./fastapi_app/Dockerfile  .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - name: Build, tag, and push rabbitmq  docker image to Amazon ECR
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: sdgp-backend-rabbitmq
            IMAGE_TAG: ${{ github.sha }} 
        run: |
              docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./rabbitmq/Dockerfile  .
              docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
